//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HistoryModel", "SessionEvent", "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Squiggle.History.DAL.Session), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Squiggle.History.DAL.Event))]
[assembly: EdmRelationshipAttribute("HistoryModel", "SessionParticipant", "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Squiggle.History.DAL.Session), "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Squiggle.History.DAL.Participant))]

#endregion

namespace Squiggle.History.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HistoryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HistoryEntities object using the connection string found in the 'HistoryEntities' section of the application configuration file.
        /// </summary>
        public HistoryEntities() : base("name=HistoryEntities", "HistoryEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HistoryEntities object.
        /// </summary>
        public HistoryEntities(string connectionString) : base(connectionString, "HistoryEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HistoryEntities object.
        /// </summary>
        public HistoryEntities(EntityConnection connection) : base(connection, "HistoryEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Participant> Participants
        {
            get
            {
                if ((_Participants == null))
                {
                    _Participants = base.CreateObjectSet<Participant>("Participants");
                }
                return _Participants;
            }
        }
        private ObjectSet<Participant> _Participants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StatusUpdate> StatusUpdates
        {
            get
            {
                if ((_StatusUpdates == null))
                {
                    _StatusUpdates = base.CreateObjectSet<StatusUpdate>("StatusUpdates");
                }
                return _StatusUpdates;
            }
        }
        private ObjectSet<StatusUpdate> _StatusUpdates;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Participants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParticipants(Participant participant)
        {
            base.AddObject("Participants", participant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatusUpdates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatusUpdates(StatusUpdate statusUpdate)
        {
            base.AddObject("StatusUpdates", statusUpdate);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HistoryModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventTypeCode">Initial value of the EventTypeCode property.</param>
        /// <param name="sender">Initial value of the Sender property.</param>
        /// <param name="stamp">Initial value of the Stamp property.</param>
        /// <param name="senderName">Initial value of the SenderName property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Event CreateEvent(global::System.Int32 eventTypeCode, global::System.Guid sender, global::System.DateTime stamp, global::System.String senderName, global::System.Guid id)
        {
            Event @event = new Event();
            @event.EventTypeCode = eventTypeCode;
            @event.Sender = sender;
            @event.Stamp = stamp;
            @event.SenderName = senderName;
            @event.Id = id;
            return @event;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeCode
        {
            get
            {
                return _EventTypeCode;
            }
            set
            {
                OnEventTypeCodeChanging(value);
                ReportPropertyChanging("EventTypeCode");
                _EventTypeCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTypeCode");
                OnEventTypeCodeChanged();
            }
        }
        private global::System.Int32 _EventTypeCode;
        partial void OnEventTypeCodeChanging(global::System.Int32 value);
        partial void OnEventTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Sender
        {
            get
            {
                return _Sender;
            }
            set
            {
                OnSenderChanging(value);
                ReportPropertyChanging("Sender");
                _Sender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sender");
                OnSenderChanged();
            }
        }
        private global::System.Guid _Sender;
        partial void OnSenderChanging(global::System.Guid value);
        partial void OnSenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Stamp
        {
            get
            {
                return _Stamp;
            }
            set
            {
                OnStampChanging(value);
                ReportPropertyChanging("Stamp");
                _Stamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stamp");
                OnStampChanged();
            }
        }
        private global::System.DateTime _Stamp;
        partial void OnStampChanging(global::System.DateTime value);
        partial void OnStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SenderName
        {
            get
            {
                return _SenderName;
            }
            set
            {
                OnSenderNameChanging(value);
                ReportPropertyChanging("SenderName");
                _SenderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SenderName");
                OnSenderNameChanged();
            }
        }
        private global::System.String _SenderName;
        partial void OnSenderNameChanging(global::System.String value);
        partial void OnSenderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HistoryModel", "SessionEvent", "Session")]
        public Session Session
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("HistoryModel.SessionEvent", "Session").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("HistoryModel.SessionEvent", "Session").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Session> SessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("HistoryModel.SessionEvent", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Session>("HistoryModel.SessionEvent", "Session", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HistoryModel", Name="Participant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Participant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Participant object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="participantId">Initial value of the ParticipantId property.</param>
        /// <param name="particpantName">Initial value of the ParticpantName property.</param>
        public static Participant CreateParticipant(global::System.Guid id, global::System.Guid participantId, global::System.String particpantName)
        {
            Participant participant = new Participant();
            participant.Id = id;
            participant.ParticipantId = participantId;
            participant.ParticpantName = particpantName;
            return participant;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParticipantId
        {
            get
            {
                return _ParticipantId;
            }
            set
            {
                OnParticipantIdChanging(value);
                ReportPropertyChanging("ParticipantId");
                _ParticipantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParticipantId");
                OnParticipantIdChanged();
            }
        }
        private global::System.Guid _ParticipantId;
        partial void OnParticipantIdChanging(global::System.Guid value);
        partial void OnParticipantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParticpantName
        {
            get
            {
                return _ParticpantName;
            }
            set
            {
                OnParticpantNameChanging(value);
                ReportPropertyChanging("ParticpantName");
                _ParticpantName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParticpantName");
                OnParticpantNameChanged();
            }
        }
        private global::System.String _ParticpantName;
        partial void OnParticpantNameChanging(global::System.String value);
        partial void OnParticpantNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HistoryModel", "SessionParticipant", "Session")]
        public Session Session
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("HistoryModel.SessionParticipant", "Session").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("HistoryModel.SessionParticipant", "Session").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Session> SessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("HistoryModel.SessionParticipant", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Session>("HistoryModel.SessionParticipant", "Session", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HistoryModel", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contact">Initial value of the Contact property.</param>
        /// <param name="contactName">Initial value of the ContactName property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        public static Session CreateSession(global::System.Guid id, global::System.Guid contact, global::System.String contactName, global::System.DateTime start)
        {
            Session session = new Session();
            session.Id = id;
            session.Contact = contact;
            session.ContactName = contactName;
            session.Start = start;
            return session;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.Guid _Contact;
        partial void OnContactChanging(global::System.Guid value);
        partial void OnContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _End;
        partial void OnEndChanging(Nullable<global::System.DateTime> value);
        partial void OnEndChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HistoryModel", "SessionEvent", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("HistoryModel.SessionEvent", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("HistoryModel.SessionEvent", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HistoryModel", "SessionParticipant", "Participant")]
        public EntityCollection<Participant> Participants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Participant>("HistoryModel.SessionParticipant", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Participant>("HistoryModel.SessionParticipant", "Participant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HistoryModel", Name="StatusUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StatusUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatusUpdate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        /// <param name="contactName">Initial value of the ContactName property.</param>
        /// <param name="statusCode">Initial value of the StatusCode property.</param>
        /// <param name="stamp">Initial value of the Stamp property.</param>
        public static StatusUpdate CreateStatusUpdate(global::System.Guid id, global::System.Guid contactId, global::System.String contactName, global::System.Int32 statusCode, global::System.DateTime stamp)
        {
            StatusUpdate statusUpdate = new StatusUpdate();
            statusUpdate.Id = id;
            statusUpdate.ContactId = contactId;
            statusUpdate.ContactName = contactName;
            statusUpdate.StatusCode = statusCode;
            statusUpdate.Stamp = stamp;
            return statusUpdate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private global::System.Guid _ContactId;
        partial void OnContactIdChanging(global::System.Guid value);
        partial void OnContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusCode
        {
            get
            {
                return _StatusCode;
            }
            set
            {
                OnStatusCodeChanging(value);
                ReportPropertyChanging("StatusCode");
                _StatusCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusCode");
                OnStatusCodeChanged();
            }
        }
        private global::System.Int32 _StatusCode;
        partial void OnStatusCodeChanging(global::System.Int32 value);
        partial void OnStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Stamp
        {
            get
            {
                return _Stamp;
            }
            set
            {
                OnStampChanging(value);
                ReportPropertyChanging("Stamp");
                _Stamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stamp");
                OnStampChanged();
            }
        }
        private global::System.DateTime _Stamp;
        partial void OnStampChanging(global::System.DateTime value);
        partial void OnStampChanged();

        #endregion

    
    }

    #endregion

    
}
