<UserControl x:Class="Squiggle.UI.Controls.ContactListControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Squiggle.UI.Controls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
    xmlns:coll="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:converters="clr-namespace:Squiggle.UI.Converters"
    xmlns:helpers="clr-namespace:Squiggle.UI.Helpers"    
    xmlns:local="clr-namespace:Squiggle.UI.Controls"
    xmlns:chat="clr-namespace:Squiggle.Chat;assembly=Squiggle.Chat"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"             
    Width="200" Height="400" Loaded="UserControl_Loaded" >
    <UserControl.Resources>
        <CollectionViewSource Source="{Binding Buddies}" x:Key="buddiesCollection" Filter="CollectionViewSource_Filter" />
        <converters:StatusIconConverter x:Key="statusIconConverter" />
        <converters:ORMultiConverter x:Key="orConverter" />
        <converters:StatusConverter x:Key="statusConverter" />
        <Style x:Key="StatusSymbol" TargetType="{x:Type Ellipse}">
            <Setter Property="Width" Value="9"/>
            <Setter Property="Height" Value="9"/>
            <Setter Property="Margin" Value="10,0,10, 0"/>
            <Setter Property="Fill" Value="#FF7DB96D"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="Online">
                    <Setter  Property="Fill" Value="#FF7DB96D" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Offline">
                    <Setter Property="Fill" Value="#FFCFCFCF" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Busy">
                    <Setter Property="Fill" Value="#FFEB6D6E" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Away">
                    <Setter Property="Fill" Value="#FFFFB937" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Idle">
                    <Setter Property="Fill" Value="#FFFFB937" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="BeRightBack">
                    <Setter Property="Fill" Value="#FFFFB937" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="ContactInfoToolTipStyle" TargetType="{x:Type ToolTip}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolTip}">
                        <Border BorderBrush="#111111" BorderThickness="1" SnapsToDevicePixels="True">
                            <Border Width="Auto" Height="Auto" Name="windowFrame" BorderBrush="#999999" BorderThickness="1" SnapsToDevicePixels="True" CornerRadius="0" Background="#525252" TextBlock.Foreground="Black" TextBlock.FontFamily="Verdana" TextBlock.FontSize="11" Margin="0" Padding="3">
                                <ContentPresenter />
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="GlyphExpandedBrush" Color="#444"/>
        <LinearGradientBrush x:Key="GlyphCollapsedBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFEEE3E3" Offset="0"/>
            <GradientStop Color="#FF555151" Offset="1"/>
            <GradientStop Color="#FFC2B6B6" Offset="0.781"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FF5B7EEE" Offset="0.0"/>
            		<GradientStop Color="#FF848FB2" Offset="1.0"/>		
        </LinearGradientBrush>

        <ControlTemplate x:Key="newToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
            <Grid Background="{TemplateBinding Background}">
                <Path
                    x:Name="Up_Arrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{DynamicResource GlyphCollapsedBrush}"
                    Data="M 0 4 L 4 0 L 8 4 Z" RenderTransformOrigin="0.5,0.5" Stroke="#FF3D3D3D">
                    <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="90.013"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path
                    x:Name="Down_Arrow"
                    Visibility="Collapsed"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{DynamicResource GlyphExpandedBrush}" RenderTransformOrigin="0.5,0.5" Stroke="#FF000000"
                    Data="M 0 4 L 4 0 L 8 4 Z">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                            <SkewTransform AngleX="0" AngleY="0"/>
                            <RotateTransform Angle="140.825"/>
                            <TranslateTransform X="0" Y="0"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Up_Arrow"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Down_Arrow"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" Value="Visible" TargetName="Down_Arrow"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="Up_Arrow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <Style x:Key="newExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*" x:Name="ContentRow"/>
                            </Grid.RowDefinitions>
                            <Border
                                x:Name="Border"
                                Grid.Row="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2,2,0,0" 
                            >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton
                                        Template="{DynamicResource newToggleButtonControlTemplate}"
                                        Background="{TemplateBinding Background}"
                                        IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        OverridesDefaultStyle="True"
                                    />
                                    <ContentPresenter Grid.Column="1" Margin="4" RecognizesAccessKey="True" ContentSource="Header"/>
                                </Grid>
                            </Border>
                            <Border
                                x:Name="ExpandSite"
                                Grid.Row="1"
                                Visibility="Collapsed"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,2,2"
                            >
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    Focusable="false"
                                />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="groupTemplate">
            <Expander 
                        Style="{DynamicResource newExpanderStyle}"
                        Tag="{Binding Name}" 
                        Loaded="Group_Loaded"
                        Collapsed="Group_ExpandChanged" 
                        Expanded="Group_ExpandChanged">
                <Expander.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{StaticResource MainWindow_SendBroadcastMessage}" Tag="{Binding Items}" Click="SendBroadcastMessageMenu_Click" />
                    </ContextMenu>
                </Expander.ContextMenu>
                <Expander.Header>
                    <TextBlock FontSize="11" FontWeight="Bold">
                        <controls:TextBlockBugFix.Text2>
                            <MultiBinding StringFormat="{}{0} ({1}/{2})">
                                <Binding Path="Name" Converter="{x:Static converters:TitleCaseConverter.Instance}" />
                                <Binding Path="Items" Converter="{x:Static converters:ContactListGroupConverter.Instance}" />
                                <Binding Path="ItemCount" />
                            </MultiBinding>
                        </controls:TextBlockBugFix.Text2>
                    </TextBlock>
                </Expander.Header>                
                <ItemsPresenter />
            </Expander>
        </ControlTemplate>
        <LinearGradientBrush x:Key="ContactInfoBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFCFCFD" Offset="0.04"/>
            <GradientStop Color="#FFE5E5F1" Offset="0.99"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HeaderBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFCFCFC" Offset="0.087"/>
            <GradientStop Color="#FFECECEC" Offset="0.478"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ToolbarBackground" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
            <GradientStop Color="#FFEEF6FA" Offset="0"/>
            <GradientStop Color="#FFE4F1F7" Offset="0.9"/>
            <GradientStop Color="#FFE4F1F6" Offset="1"/>
        </LinearGradientBrush>
        <ObjectDataProvider MethodName="GetChangableStatuses" 
            ObjectType="{x:Type helpers:SquiggleUtility}" 
            x:Key="AvailableUserStatus">
        </ObjectDataProvider>
        <DataTemplate x:Key="standardView">
            <Border x:Name="contactBorder" Padding="1" Cursor="Hand" Style="{StaticResource ContactListItem}"
                    Tag="{Binding}" MouseLeftButtonUp="Buddy_Click" AllowDrop="True" Drop="Buddy_Drop" DragOver="Buddy_DragOver">
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{StaticResource Buddy_StartChat}" Tag="{Binding}" Click="StartChat_Click" />
                        <MenuItem Header="{StaticResource Buddy_SendFile}" Tag="{Binding}" Click="SendFile_Click" />
                        <MenuItem Header="{StaticResource Buddy_SendEmail}" Tag="{Binding}" Click="SendEmail_Click" />
                    </ContextMenu>
                </Border.ContextMenu>
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="0.01*"/>
                    </Grid.RowDefinitions>
                    <Image Width="20" Height="20" Source="{Binding Path=Status, Converter={StaticResource statusIconConverter}}" VerticalAlignment="Top"/>
                    <StackPanel Orientation="Vertical" Grid.Column="1">
                        <StackPanel HorizontalAlignment="Left" Grid.Column="1"
                                            Orientation="Horizontal" Margin="5,0,0,0" Cursor="Hand" >
                            <TextBlock Text="{Binding Path=DisplayName}" />
                            <TextBlock x:Name="buddyStatus" Margin="5,0,0,0" Text="{Binding Path=Status, Converter={StaticResource statusConverter}, StringFormat={}({0})}" />
                        </StackPanel>
                        <TextBlock Margin="5,0,0,0" Text="{Binding Path=Properties.DisplayMessage}" TextTrimming="WordEllipsis" ToolTip="{Binding Path=DisplayMessage}"  FontSize="10" Foreground="#FF9A9C9D" HorizontalAlignment="Left" />
                    </StackPanel>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="Online">
                    <Setter TargetName="buddyStatus" Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Offline">
                    <Setter TargetName="buddyStatus" Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="White" 
                                TargetName="contactBorder"></Setter>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="WhiteSmoke" 
                                TargetName="contactBorder"></Setter>
                </Trigger>
                <Trigger SourceName="contactBorder" Property="IsMouseOver" Value="True">
                    <Setter TargetName="contactBorder" Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFF0F0F0" Offset="0.061"/>
                                <GradientStop Color="#FFE3E4E4" Offset="0.939"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="compactView">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="contactBorder" Cursor="Hand"  Height="20"
                    Tag="{Binding}" MouseLeftButtonUp="Buddy_Click" AllowDrop="True" Drop="Buddy_Drop" DragOver="Buddy_DragOver">
                    <Border.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{StaticResource Buddy_StartChat}" Tag="{Binding}" Click="StartChat_Click" />
                            <MenuItem Header="{StaticResource Buddy_SendFile}" Tag="{Binding}" Click="SendFile_Click" />
                            <MenuItem Header="{StaticResource Buddy_SendEmail}" Tag="{Binding}" Click="SendEmail_Click" />
                        </ContextMenu>
                    </Border.ContextMenu>
                    <Grid>

                        <StackPanel Orientation="Horizontal" Cursor="Hand" VerticalAlignment="Center" Margin="10,0,0,0">
                            <Ellipse x:Name="ellipseStatus" Style="{StaticResource StatusSymbol}" />
                            <TextBlock Text="{Binding Path=DisplayName}" FontSize="11" />
                            <TextBlock Margin="5,0,0,0" Text="{Binding Path=Properties.DisplayMessage}" TextTrimming="WordEllipsis" ToolTip="{Binding Path=DisplayMessage}"  FontSize="10" Foreground="#FF9A9C9D" HorizontalAlignment="Left" />
                        </StackPanel>
                    </Grid>
                </Border>
                <Popup x:Name="popup" PlacementTarget="{Binding ElementName=contactBorder}"
                           VerticalOffset="0"  Placement="Left" Width="350" Height="170"
                           AllowsTransparency="true" Focusable="true" StaysOpen="true">
                    <Popup.IsOpen>
                        <MultiBinding Converter="{StaticResource orConverter}">
                            <Binding ElementName="contactBorder" Path="IsMouseOver" Mode="OneWay" />
                            <Binding ElementName="popup" Path="IsMouseOver" Mode="OneWay" />
                        </MultiBinding>
                    </Popup.IsOpen>
                    <Border Margin="5" BorderBrush="Black" BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.3*"/>
                                <ColumnDefinition Width="0.7*"/>
                            </Grid.ColumnDefinitions>
                            <DockPanel Background="#FFD6D9E5" Grid.ColumnSpan="2">
                                <Button DockPanel.Dock="Left" Background="White" Content="Chat" MinWidth="75" Margin="5" Tag="{Binding}" Click="StartChat_Click"/>
                                <Button DockPanel.Dock="Left" Background="White" Content="Email" MinWidth="75" Margin="5" Tag="{Binding}" Click="SendEmail_Click"/>
                                <Button DockPanel.Dock="Right" Background="White" Content="Send File" Width="100" Margin="5" HorizontalAlignment="Right" Tag="{Binding}" Click="SendFile_Click"/>
                            </DockPanel>
                            <Border BorderBrush="Black" BorderThickness="0,1,0,1" Background="White" VerticalAlignment="Stretch"  Grid.ColumnSpan="2" Grid.Row="1">
                                <StackPanel Orientation="Vertical" Margin="0,5,0,0">
                                    <StackPanel Orientation="Horizontal">
                                        <Ellipse Style="{StaticResource StatusSymbol}"  Margin="5,0,5,0" VerticalAlignment="Center" />
                                        <TextBlock Foreground="Black" FontWeight="Bold"  Text="{Binding DisplayName}"/>
                                        <TextBlock Foreground="Black" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="10" Text="{Binding Status, StringFormat=(\{0\})}"/>
                                    </StackPanel>
                                    <ScrollViewer Height="90" VerticalScrollBarVisibility="Auto" >
                                        <TextBlock Margin="10,0,0,0" Foreground="#FF9A9C9D" Text="{Binding Properties.DisplayMessage}" TextWrapping="WrapWithOverflow"/>
                                    </ScrollViewer>
                                    <!--<TextBlock Foreground="Black" Text="{Binding Properties.EmailAddress, StringFormat=Email: \{0\}}"/>-->
                                    <!--<TextBlock Foreground="Black" Text="{Binding Properties.MachineName, StringFormat='Machine name: \{0\}'}" />-->
                                    <!--<TextBlock Foreground="Black" Text="{Binding Properties.GroupName, StringFormat='Group name: \{0\}'}" />-->
                                </StackPanel>
                            </Border>
                            <DockPanel Background="White" Grid.Row="2" Grid.ColumnSpan="2" >
                                <TextBlock Margin="5,0,0,0" FontSize="10" Foreground="Black" Text="{Binding Properties.MachineName, StringFormat='Machine name: \{0\}'}" />
                                <TextBlock Margin="0,0,5,0" DockPanel.Dock="Right" HorizontalAlignment="Right" Foreground="Black" FontSize="10" Text="{Binding LastUpdated, StringFormat='Last updated: \{0:T\}'}" />
                            </DockPanel>
                        </Grid>
                    </Border>
                </Popup>
            </Grid>

            <DataTemplate.Triggers>
               
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="White" 
                                TargetName="contactBorder"></Setter>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="WhiteSmoke" 
                                TargetName="contactBorder"></Setter>
                </Trigger>
                <Trigger SourceName="contactBorder" Property="IsMouseOver" Value="True">
                    <Setter TargetName="contactBorder" Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFF0F0F0" Offset="0.061"/>
                                <GradientStop Color="#FFE3E4E4" Offset="0.939"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <local:ContactsViewSelector x:Key="contactViewSelector" StandardView="{StaticResource standardView}" CompactView="{StaticResource compactView}"/>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Background="{StaticResource HeaderBackground}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="0.20*"/>
                </Grid.RowDefinitions>
                <StackPanel DataContext="{Binding Path=LoggedInUser}" Margin="0,-5,0,0" x:Name="signedInView" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left">
                    <TextBlock Margin="10,0,5,0" VerticalAlignment="Center" Text="{Binding DisplayName}" Foreground="Black" FontSize="16" x:Name="txtLoggedInUser" HorizontalAlignment="Left" />
                    <ComboBox  Grid.Column="1" VerticalAlignment="Center" Style="{DynamicResource ComboBoxStyle}" Width="100" SelectedValue="{Binding Path=Status}"
                              Background="Gray" Focusable="False">
                        <ComboBox.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer Collection="{Binding Source={StaticResource AvailableUserStatus}}"/>
                                <Separator IsEnabled="False"/>
                                <ComboBoxItem PreviewMouseLeftButtonDown="ComboBoxItem_PreviewMouseLeftButtonDown"
                                              PreviewKeyDown="ComboBoxItem_PreviewKeyDown" Content="{StaticResource MainWindow_TrayMenu_SignOut}" />
                            </CompositeCollection>
                        </ComboBox.ItemsSource>
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Background="{StaticResource HeaderBackground}"/>
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding Converter={StaticResource statusConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <controls:DisplayMessageBox DataContext="{Binding Path=LoggedInUser}" Margin="0,-5,0,0" VerticalAlignment="Bottom" Grid.Row="2" Width="Auto" Grid.ColumnSpan="4" SelfUser="{Binding}"/>
                <Label Grid.Row="3" Grid.ColumnSpan="2" Background="LightYellow" Foreground="Blue">
                    <Hyperlink NavigateUri="{Binding UpdateLink}" RequestNavigate="UpdateLink_RequestNavigate">
                        <TextBlock Text="{StaticResource MainWindow_UpdateNotice}" />
                    </Hyperlink>
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding UpdateLink}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </Grid>
        </Border>
        <Grid Grid.Row="1" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <DockPanel Height="30" >
                <DockPanel.ContextMenu>
                    <ContextMenu />
                </DockPanel.ContextMenu>
                    <DockPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF9F9F9" Offset="0.111"/>
                        <GradientStop Color="#FFE4E4E4" Offset="0.593"/>
                    </LinearGradientBrush>
                </DockPanel.Background>
                <Image Source="/Images/info.png" Cursor="Hand" Width="18" Height="18" Margin="5,0,0,0" DockPanel.Dock="Left" MouseLeftButtonDown="About_MouseLeftButtonDown" />
                <controls:FilterTextBox FilterChanged="FilterTextBox_FilterChanged" VerticalAlignment="Top" Height="25" Margin="5,2,5,2" />
            </DockPanel>
            <ScrollViewer Grid.Row="1" Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                <StackPanel>
                    <ItemsControl Focusable="False" Margin="5" DataContext="{Binding}" 
                                  ItemsSource="{Binding Source={StaticResource buddiesCollection}}" 
                                  AlternationCount="2" ItemTemplateSelector="{StaticResource contactViewSelector}">
                        <ItemsControl.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Template" Value="{StaticResource groupTemplate}" />
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                        </ItemsControl.GroupStyle>
                    </ItemsControl>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</UserControl>
